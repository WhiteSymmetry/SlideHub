# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure(2) do |config|
  config.vm.box = 'opscode-ubuntu-14.04'
  # config.vm.network "forwarded_port", guest: 80, host: 8080
  config.vm.network 'private_network', ip: '192.168.44.8'
  # config.vm.network "public_network"
  # config.vm.synced_folder "../data", "/vagrant_data"
  config.vm.provider 'virtualbox' do |vb|
    vb.gui = true
    vb.memory = '1024'
  end

  ## Generate environment file for staging
  if File.exist?(File.dirname(__FILE__) + '/.env')
    out = ''
    File.read(File.dirname(__FILE__) + '/.env').each_line do |l|
      out += l.gsub(/OSS\_/, 'export OSS_')
    end
    require 'tempfile'
    file = Tempfile.new('env', '/tmp/')
    begin
      file.write(out)
      file.close
      config.vm.provision 'file', source: file.path, destination: '/tmp/environment'
    end
  else
    puts 'You need to place .env to specify environmental variables'
    exit
  end

  unless Vagrant.has_plugin?('dotenv')
    puts 'You need to install dotenv plugin by running "vagrant plugin install dotenv"'
    exit
  end

  unless Vagrant.has_plugin?('vagrant-reload')
    puts 'You need to install vagrant-reload plugin by running "vagrant plugin install vagrant-reload"'
    exit
  end

  config.vm.provision 'fix-no-tty', type: 'shell' do |s|
    s.privileged = false
    s.inline = "sudo sed -i '/tty/!s/mesg n/tty -s \\&\\& mesg n/' /root/.profile"
  end

  config.vm.provision 'shell', inline: <<-SHELL1
    if [ -f /tmp/environment ]; then
      sudo mv /tmp/environment /etc/environment
    fi
    SHELL1

  config.vm.provision :reload

  config.vm.provision 'shell', inline: <<-SHELL2
    export MYSQL_PASSWORD=$OSS_DB_PASSWORD
    sudo apt-get update
    sudo apt-get install -y nginx wget build-essential

    if [ ! -f /etc/mysql/my.cnf ]; then
      sudo debconf-set-selections <<< "mysql-server mysql-server/root_password password $MYSQL_PASSWORD"
      sudo debconf-set-selections <<< "mysql-server mysql-server/root_password_again password $MYSQL_PASSWORD"
      sudo apt-get -y install mysql-server-5.5 libmysqlclient-dev
      mysql -uroot -p$MYSQL_PASSWORD mysql -e "create database openslideshare default character set 'utf8'"
      mysql -uroot -p$MYSQL_PASSWORD mysql -e "create database test_openslideshare default character set 'utf8'"
      mysql -uroot -p$MYSQL_PASSWORD mysql -e "grant all on *.* to 'root'@'%' identified by 'passw0rd'"

      sudo sed -i "s/^bind-address.*//" /etc/mysql/my.cnf
      sudo service mysql restart
    fi

    if [ ! -f /usr/bin/docker ]; then
      wget -qO- https://get.docker.com/ | sh
      sudo usermod -aG docker vagrant
    fi
  SHELL2

  config.vm.provision :reload

  config.vm.provision 'shell', inline: <<-SHELL3
    docker pull ryuzee/slidehub:latest
    docker run -d \
  --env OSS_REGION=$OSS_REGION \
  --env OSS_SQS_URL=$OSS_SQS_URL \
  --env OSS_BUCKET_NAME=$OSS_BUCKET_NAME \
  --env OSS_IMAGE_BUCKET_NAME=$OSS_IMAGE_BUCKET_NAME \
  --env OSS_USE_S3_STATIC_HOSTING=$OSS_USE_S3_STATIC_HOSTING \
  --env OSS_AWS_SECRET_KEY=$OSS_AWS_SECRET_KEY \
  --env OSS_AWS_ACCESS_ID=$OSS_AWS_ACCESS_ID \
  --env OSS_SECRET_KEY_BASE=$OSS_SECRET_KEY_BASE \
  --env OSS_DB_USERNAME=$OSS_DB_USERNAME \
  --env OSS_DB_PASSWORD=$OSS_DB_PASSWORD \
  --env OSS_DB_URL=192.168.44.8 \
  -p 3001:3000 --name oss1 ryuzee/slidehub:latest
  docker exec -i oss1 bash -l -c 'RAILS_ENV=production bundle exec rake db:migrate'
  SHELL3
end
